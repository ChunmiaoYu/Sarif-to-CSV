["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$process",["^ ","~$on",["^ "]]],"~:use-macros",["^ ","~$try-true","~$cljs-node-io.macros"],"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.file","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^=","^>","~$cljs-node-io.streams","^@","~$iofs","~$cljs-node-io.fs","^B","^B","~$cljs-node-io.protocols","^C"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$make-output-stream","^C","~$make-writer","^C","~$as-file","^C","~$make-reader","^C","~$Coercions","^C","~$make-input-stream","^C","~$FileOutputStream","^@","~$FileInputStream","^@","~$IOFactory","^C","~$IFile","^C","~$as-url","^C"],"~:defs",["^ ","~$get-non-dirs",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","~:line",79,"~:column",7,"~:end-line",79,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^[",[["~$pathstring"]]]]],"~:doc","Returns sequence of strings representing non-existing directory components\n   of the passed pathstring, root first, in order\n   @param {!string} pathstring\n   @return {!ISeq}"],"^:","~$cljs-node-io.file/get-non-dirs","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",19,"~:method-params",["^[",[["^11"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^W",1,"~:variadic?",false,"^V",79,"~:ret-tag",["^9",[null,"~$seq","~$cljs.core/IList","~$any"]],"^X",79,"~:max-fixed-arity",1,"~:fn-var",true,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^12","Returns sequence of strings representing non-existing directory components\n   of the passed pathstring, root first, in order\n   @param {!string} pathstring\n   @return {!ISeq}"],"~$setWritable*",["^ ","^S",null,"^T",["^ ","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^V",33,"^W",7,"^X",33,"^Y",19,"^Z",["^[",["^10",["^[",[["~$mode","~$writable","~$ownerOnly"]]]]],"^12","@param {!number} mode : the file's existing mode\n   @param {!boolean} writable : add or remove write permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^:","~$cljs-node-io.file/setWritable*","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",19,"^14",["^[",[["^1?","^1@","^1A"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",33,"^18","~$number","^X",33,"^1<",3,"^1=",true,"^Z",["^[",["^10",["^[",[["^1?","^1@","^1A"]]]]],"^12","@param {!number} mode : the file's existing mode\n   @param {!boolean} writable : add or remove write permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$setReadable",["^ ","^S",null,"^T",["^ ","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^V",22,"^W",7,"^X",22,"^Y",18,"^Z",["^[",["^10",["^[",[["~$pathstr","~$readable"],["^1E","^1F","^1A"]]]]],"^12","toggles the readable permission bit(s) for the specified filepath.\n   If readable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","~:top-fn",["^ ","^17",false,"~:fixed-arity",3,"^1<",3,"^14",[["^1E","^1F"],["^1E","^1F","^1A"]],"^Z",["^[",[["^1E","^1F"],["^1E","^1F","^1A"]]],"^16",["^[",[null,null]]]],"^:","~$cljs-node-io.file/setReadable","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",18,"^1G",["^ ","^17",false,"^1H",3,"^1<",3,"^14",[["^1E","^1F"],["^1E","^1F","^1A"]],"^Z",["^[",[["^1E","^1F"],["^1E","^1F","^1A"]]],"^16",["^[",[null,null]]],"^14",[["^1E","^1F"],["^1E","^1F","^1A"]],"^15",null,"^1H",3,"^16",["^[",[null,null]],"^W",1,"^17",false,"~:methods",[["^ ","^1H",2,"^17",false,"~:tag","^1;"],["^ ","^1H",3,"^17",false,"^1K","~$js"]],"^V",22,"^X",22,"^1<",3,"^1=",true,"^Z",["^[",[["^1E","^1F"],["^1E","^1F","^1A"]]],"^12","toggles the readable permission bit(s) for the specified filepath.\n   If readable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$->File",["^ ","^S",null,"^T",["^ ","~:protocols",["^9",["~$cljs.core/IEquiv","~$cljs-node-io.file/Object","~$cljs-node-io.protocols/Coercions","~$cljs-node-io.protocols/IFile","~$cljs-node-io.protocols/IOFactory","~$cljs.core/IPrintWithWriter"]],"^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",14,"^W",10,"~:factory","~:positional","^V",87,"^X",87,"^Z",["^[",["^10",["^[",[["^11"]]]]],"~:skip-protocol-flag",["^9",["^1O","^1T"]],"^12","Positional factory function for cljs-node-io.file/File."],"^1N",["^9",["^1O","^1P","^1Q","^1R","^1S","^1T"]],"^:","~$cljs-node-io.file/->File","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",14,"^14",["^[",[["^11"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^1U","^1V","^V",87,"^18","~$cljs-node-io.file/File","^X",87,"^1<",1,"^1=",true,"^Z",["^[",["^10",["^[",[["^11"]]]]],"^1W",["^9",["^1O","^1T"]],"^12","Positional factory function for cljs-node-io.file/File."],"~$setReadable*",["^ ","^S",null,"^T",["^ ","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^V",10,"^W",7,"^X",10,"^Y",19,"^Z",["^[",["^10",["^[",[["^1?","^1F","^1A"]]]]],"^12","@param {!number} mode : the file's existing mode\n   @param {!boolean} readable : add or remove read permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^:","~$cljs-node-io.file/setReadable*","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",19,"^14",["^[",[["^1?","^1F","^1A"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",10,"^18","^1C","^X",10,"^1<",3,"^1=",true,"^Z",["^[",["^10",["^[",[["^1?","^1F","^1A"]]]]],"^12","@param {!number} mode : the file's existing mode\n   @param {!boolean} readable : add or remove read permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$File",["^ ","~:num-fields",1,"^1N",["^9",["^1O","^1P","^1Q","^1R","^1S","^1T"]],"^:","^1Y","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",14,"~:type",true,"^W",10,"^V",87,"~:record",false,"^X",87,"^1K","~$function","^1W",["^9",["^1O","^1T"]]],"~$setExecutable",["^ ","^S",null,"^T",["^ ","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^V",68,"^W",7,"^X",68,"^Y",20,"^Z",["^[",["^10",["^[",[["^1E","~$executable"],["^1E","^26","^1A"]]]]],"^12","toggles the executable permission bit(s) for the specified filepath.\n   If executable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","^1G",["^ ","^17",false,"^1H",3,"^1<",3,"^14",[["^1E","^26"],["^1E","^26","^1A"]],"^Z",["^[",[["^1E","^26"],["^1E","^26","^1A"]]],"^16",["^[",[null,null]]]],"^:","~$cljs-node-io.file/setExecutable","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",20,"^1G",["^ ","^17",false,"^1H",3,"^1<",3,"^14",[["^1E","^26"],["^1E","^26","^1A"]],"^Z",["^[",[["^1E","^26"],["^1E","^26","^1A"]]],"^16",["^[",[null,null]]],"^14",[["^1E","^26"],["^1E","^26","^1A"]],"^15",null,"^1H",3,"^16",["^[",[null,null]],"^W",1,"^17",false,"^1J",[["^ ","^1H",2,"^17",false,"^1K","^1;"],["^ ","^1H",3,"^17",false,"^1K","^1L"]],"^V",68,"^X",68,"^1<",3,"^1=",true,"^Z",["^[",[["^1E","^26"],["^1E","^26","^1A"]]],"^12","toggles the executable permission bit(s) for the specified filepath.\n   If executable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$setWritable",["^ ","^S",null,"^T",["^ ","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^V",45,"^W",7,"^X",45,"^Y",18,"^Z",["^[",["^10",["^[",[["^1E","^1@"],["^1E","^1@","^1A"]]]]],"^12","toggles the writable permission bit(s) for the specified filepath.\n   If writable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","^1G",["^ ","^17",false,"^1H",3,"^1<",3,"^14",[["^1E","^1@"],["^1E","^1@","^1A"]],"^Z",["^[",[["^1E","^1@"],["^1E","^1@","^1A"]]],"^16",["^[",[null,null]]]],"^:","~$cljs-node-io.file/setWritable","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",18,"^1G",["^ ","^17",false,"^1H",3,"^1<",3,"^14",[["^1E","^1@"],["^1E","^1@","^1A"]],"^Z",["^[",[["^1E","^1@"],["^1E","^1@","^1A"]]],"^16",["^[",[null,null]]],"^14",[["^1E","^1@"],["^1E","^1@","^1A"]],"^15",null,"^1H",3,"^16",["^[",[null,null]],"^W",1,"^17",false,"^1J",[["^ ","^1H",2,"^17",false,"^1K","^1;"],["^ ","^1H",3,"^17",false,"^1K","^1L"]],"^V",45,"^X",45,"^1<",3,"^1=",true,"^Z",["^[",[["^1E","^1@"],["^1E","^1@","^1A"]]],"^12","toggles the writable permission bit(s) for the specified filepath.\n   If writable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$setExecutable*",["^ ","^S",null,"^T",["^ ","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^V",56,"^W",7,"^X",56,"^Y",21,"^Z",["^[",["^10",["^[",[["^1?","^26","^1A"]]]]],"^12","@param {!number} mode : the file's existing mode\n   @param {!boolean} executable : add or remove execute permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^:","~$cljs-node-io.file/setExecutable*","^U","/Users/brad/.cljs/.aot_cache/1.10.758/6647A8D/cljs_node_io/file.cljs","^Y",21,"^14",["^[",[["^1?","^26","^1A"]]],"^15",null,"^16",["^[",[null,null]],"^W",1,"^17",false,"^V",56,"^18","^1C","^X",56,"^1<",3,"^1=",true,"^Z",["^[",["^10",["^[",[["^1?","^26","^1A"]]]]],"^12","@param {!number} mode : the file's existing mode\n   @param {!boolean} executable : add or remove execute permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^7","^7"],"~:cljs.analyzer/constants",["^ ","~:seen",["^9",["~:else","^11","~:mutable","~:flags"]],"~:order",["^2@","^2B","^11","^2A"]],"^12","a port of java.io.File's reified files to node"]